generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        Int                        @id @default(autoincrement())
  email                     String                     @unique
  password                  String
  name                      String
  gender                    Gender
  birthDate                 DateTime
  height                    Float?
  weight                    Float?
  smoking                   Boolean                    @default(false)
  drinkingFrequency         String?
  chronicDisease            String?
  medications               String?
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  diagnosisRecords          DiagnosisRecord[]
  hospitalRecommendations   HospitalRecommendation[]
  supplementRecommendations SupplementRecommendation[]
}

model DiagnosisRecord {
  id                           Int                        @id @default(autoincrement())
  userId                       Int
  symptoms                     String
  diagnosisResult              String
  departments                  String?
  heightAtDiagnosis            Float?
  weightAtDiagnosis            Float?
  smokingAtDiagnosis           Boolean                    @default(false)
  drinkingFrequencyAtDiagnosis String?
  chronicDiseaseAtDiagnosis    String?
  medicationsAtDiagnosis       String?
  createdAt                    DateTime                   @default(now())
  user                         User                       @relation(fields: [userId], references: [id])
  hospitalRecommendations      HospitalRecommendation[]
  supplementRecommendations    SupplementRecommendation[]
}

model SupplementRecommendation {
  id                 Int              @id @default(autoincrement())
  userId             Int
  basedOnDiagnosisId Int?
  recommendations    String
  createdAt          DateTime         @default(now())
  wasViewed          Boolean          @default(false)
  diagnosisRecord    DiagnosisRecord? @relation(fields: [basedOnDiagnosisId], references: [id])
  user               User             @relation(fields: [userId], references: [id])
}

model HospitalRecommendation {
  id                   Int              @id @default(autoincrement())
  userId               Int
  basedOnDiagnosisId   Int?
  location             String?
  recommendedHospitals String
  createdAt            DateTime         @default(now())
  diagnosisRecord      DiagnosisRecord? @relation(fields: [basedOnDiagnosisId], references: [id])
  user                 User             @relation(fields: [userId], references: [id])
}

enum Gender {
  M
  F
}
